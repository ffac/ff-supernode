---
ffac_asn: 65077
public_prefix: 185.66.193.40/29

bird:
  router_id: "{{ router_id }}"
  kernel:
    - is_ipv6: no
      ip_table: 42
      exports:
        - "filter filter_kernel_v4"
    - is_ipv6: yes
      ip_table: 42
      # bird_table: auxtable
      exports:
        - "filter filter_kernel_v6"
  ospf:
    - version: v2
      name: IGP
      is_ipv6: no
      imports:
        - "all"
      exports:
        - "filter accept_public_prefix_v4"
      area:
        - id: 0
          interfaces:
            - name: lo
              stub: yes
            - name: wg-*
              cost: 100
              type: ptp
              hello: 5
              retransmit: 2
              wait: 10
              dead: 20
              check: link
              authentication: "none"
            - name: eth1
              cost: 10
              hello: 5
              retransmit: 2
              wait: 10
              dead: 20
              check: link
              authentication: "none"
    - version: v3
      name: IGP6
      is_ipv6: yes
      imports:
        - "all"
      exports:
        - "filter accept_public_prefix_v6"
      area:
        - id: 0
          interfaces:
            - name: lo
              stub: yes
            - name: wg-*
              cost: 100
              type: ptp
              hello: 5
              retransmit: 2
              wait: 10
              dead: 20
              check: link
              authentication: "none"
            - name: eth1
              cost: 10
              hello: 5
              retransmit: 2
              wait: 10
              dead: 20
              check: link
              authentication: "none"
  templates:
    - name: ffrl_exit
      protocol: bgp
      local_asn: "{{ ffac_asn }}"
      v4: |
        import where is_default_v4();
        export filter hostroute;
        export where is_our_prefix_v4();
        next hop self;
      v6: |
        import all;
        export where is_aachen_0114();
        export where is_aachen_3006();
        export where proto = "uplink_hostroute";
        next hop self;
      next_hop: yes
      multihop: 64
  protocols:
    - name: uplink_hostroute
      type: static
      body: |
        import all;
        route 2a03:2260:114:0100::/56 reject;
        route 2a03:2260:3006:0100::/56 reject;
        route 2a03:2260:3006:0200::/56 reject;
  filter:
    - name: reject_internal_prefixes_v4
      default_accept: yes
      rules:
        - "if net ~ [100.64.17.0/24+, 5.145.135.128/27+, 10.0.0.0/8+] then reject;"
    - name: accept_public_prefix_v4
      default_accept: no
      rules:
        - "if net ~ [185.193.64.40/29+] then accept;"
    - name: reject_internal_prefixes_v6
      default_accept: yes
      rules:
        - "if net ~ [2a00:fe0:43::/48+, 2a03:2260:3006:300::/56] then reject;"
    - name: accept_public_prefix_v6
      default_accept: no
      rules:
        - "if net ~ [2a03:2260:3006::/48+] then accept;"
    - name: filter_kernel_v4
      default_accept: yes
      rules:
        - "if net ~ [100.64.17.0/24+, 5.145.135.128/27+, 10.0.0.0/8+] then reject;"
    - name: filter_kernel_v6
      default_accept: yes
      rules:
        - "if net ~ [2a00:fe0:43::/48+, 2a03:2260:3006:300::/56{56,64}] then reject;"
    - name: default_route_v4
      default_accept: no
      rules:
        - "if net ~ [0.0.0.0/0] then accept;"
    - name: hostroute
      default_accept: no
      rules:
        - "if net ~ 185.66.193.43/32 then accept;"
        - "if net ~ 185.66.193.44/32 then accept;"
        - "if net ~ 185.66.193.45/32 then accept;"
        - "if net ~ 185.66.193.46/32 then accept;"
  functions:
    - name: is_default_v4
      body: |
        return net ~ [ 0.0.0.0/0 ];
    - name: is_default_v6
      body: |
        return net ~ [ ::/0 ];
    - name: is_our_prefix_v4
      body: |
        return net ~ [
        #		5.61.86.0/29+,
        #		80.87.173.216/29+,
            185.66.193.40/29+
        ];
    - name: is_our_prefix_v6
      body: |
        return net ~ [ 2a03:2260:114::/48 ];
    - name: is_aachen_0114
      body: |
        return net ~ [ 2a03:2260:114:0100::/56{56,64} ];
    - name: is_aachen_3006
      body: |
        return net ~ [ 2a03:2260:3006:0100::/56{56,64},	2a03:2260:3006:0200::/56{56,64} ];
